--- drivers/i2c/busses/i2c-s3c2410.c	2011-10-07 21:33:35.000000000 -0300
+++ drivers/i2c/busses/i2c-s3c2410.c	2011-10-07 21:45:55.126258160 -0300
@@ -609,23 +673,35 @@
 	int ret;
 
 	clk_enable(i2c->clk);
+#if defined(CONFIG_LATIN_ARIES_B) 
+//&& defined(CONFIG_LATIN_REV_06) i2c switch mode implementation onecosmic
+	/* latin_cam:namkh 2010.06.18,
+	 * i2c switching setting for camera and TV */
+
+	set_i2c_switch(adap, msgs);
+//	printk("i2c switch message: \n", __FUNCTION__);
+#endif
 
 	for (retry = 0; retry < adap->retries; retry++) {
 
 		ret = s3c24xx_i2c_doxfer(i2c, msgs, num);
 
 		if (ret != -EAGAIN)
-			goto out;
+		goto out;
+//			return ret;
 
 		dev_dbg(i2c->dev, "Retrying transmission (%d)\n", retry);
 
 		udelay(100);
 	}
-	ret = -EREMOTEIO;
+	return -EREMOTEIO;
+
 out:
 	clk_disable(i2c->clk);
-
+	
 	return ret;
+//	return -EREMOTEIO; return correction onecosmic
+
 }
 
 /* declare our i2c functionality */
@@ -952,7 +1022,7 @@
 	}
 
 	platform_set_drvdata(pdev, i2c);
-
+	
 	clk_disable(i2c->clk);
 
 	dev_info(&pdev->dev, "%s: S3C I2C adapter\n", dev_name(&i2c->adap.dev));
@@ -1023,7 +1093,7 @@
 	struct s3c24xx_i2c *i2c = platform_get_drvdata(pdev);
 
 	i2c->suspended = 0;
-
+	
 	clk_enable(i2c->clk);
 	s3c24xx_i2c_init(i2c);
 	clk_disable(i2c->clk);
